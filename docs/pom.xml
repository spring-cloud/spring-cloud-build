<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>spring-cloud-build-docs</artifactId>
	<name>spring-cloud-build-docs</name>
	<packaging>jar</packaging>
	<description>Spring Cloud Build Docs</description>
	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-build</artifactId>
		<version>4.1.6-SNAPSHOT</version>
	</parent>
	<properties>
		<docs.main>spring-cloud-build</docs.main>
		<main.basedir>${basedir}/..</main.basedir>
		<!-- We don't want to downloaded sources of our own project-->
		<maven-dependency-plugin-for-docs.phase>none</maven-dependency-plugin-for-docs.phase>
		<maven-dependency-plugin-for-docs-classes.phase>none</maven-dependency-plugin-for-docs-classes.phase>
		<generate-cloud-resources.phase>none</generate-cloud-resources.phase>
		<docs.resources.dir>${project.basedir}/src/main/</docs.resources.dir>
		<!-- Don't upload docs jar to central / repo.spring.io -->
		<!-- TODO: temporary, don't want it to central? -->
		<maven-deploy-plugin-default.phase>deploy</maven-deploy-plugin-default.phase>
		<!-- We don't want to reference plugin classpath of ourselves -->
		<readme.class.path>maven.compile.classpath</readme.class.path>
		<spring-cloud-build-docs-classifier></spring-cloud-build-docs-classifier>
	</properties>
	<dependencies>
		<!-- Script -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.3.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- Asciidoctor -->
		<dependency>
			<groupId>org.asciidoctor</groupId>
			<artifactId>asciidoctorj</artifactId>
			<version>${asciidoctorj.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.7.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<!-- tag::docs[] -->
	<profiles>
		<profile>
			<id>docs</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/antora/resources/antora-resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>io.spring.maven.antora</groupId>
						<artifactId>antora-component-version-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.antora</groupId>
						<artifactId>antora-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- end::docs[] -->
	</profiles>
</project>
